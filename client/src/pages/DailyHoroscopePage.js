import React, { useEffect, useState } from "react";
import "./DailyHoroscopePage.css";

const DailyHoroscopePage = () => {
  const [loading, setLoading] = useState(true);
  const [prediction, setPrediction] = useState(null);
  const [error, setError] = useState("");

  useEffect(() => {
    getHoroscope();
  }, []);

  const getHoroscope = async () => {
    try {
      const userData = JSON.parse(localStorage.getItem("userData"));

      if (
        !userData ||
        !userData.name ||
        !userData.birthDate ||
        !userData.birthTime ||
        !userData.birthPlace
      ) {
        setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –ø–µ—Ä–µ–¥ –ø–æ–ª—É—á–µ–Ω–∏–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø–∞.");
        setLoading(false);
        return;
      }

      console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:", userData);

      const response = await fetch("http://localhost:5000/horoscope/daily-horoscope", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          name: userData.name,
          birthDate: userData.birthDate,
          birthTime: userData.birthTime,
          birthPlace: userData.birthPlace,
          latitude: userData.latitude || "",
          longitude: userData.longitude || "",
          julianDate: userData.julianDate || "",
        }),
      });

      const result = await response.json();
      console.log("ü™ê –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", result);

      if (response.ok && result?.horoscope?.message) {
        setPrediction(result.horoscope.message);
      } else {
        setError(result?.message || "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø.");
      }
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞:", err);
      setError("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≥–æ—Ä–æ—Å–∫–æ–ø–∞.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="daily-horoscope-container">
      {loading ? (
        <div className="loader">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      ) : error ? (
        <div className="error-message">{error}</div>
      ) : (
        <div className="horoscope-result">
          <h2>–¢–≤–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</h2>
          <p>{prediction}</p>
        </div>
      )}
    </div>
  );
};

export default DailyHoroscopePage;

